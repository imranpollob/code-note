{"componentChunkName":"component---node-modules-gatsby-theme-code-notes-src-templates-note-js","path":"/javascript/use-object-and-array-destructuring/","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Use object and array destructuring\",\n  \"tags\": [\"javascript\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"object-destructuring\"\n  }, \"Object destructuring\"), mdx(\"p\", null, \"Use object destructuring when accessing and using multiple properties of an object. \"), mdx(\"p\", null, \"Time to write some facy code.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"// bad\\nfunction getFullName(employee) {\\n  const firstName = employee.firstName;\\n  const lastName = employee.lastName;\\n\\n  return `${firstName} ${lastName}`;\\n}\\n\\n// good\\nfunction getFullName(employee) {\\n  const { firstName, lastName } = employee;\\n  return `${firstName} ${lastName}`;\\n}\\n\\n// best\\nfunction getFullName({ firstName, lastName }) {\\n  return `${firstName} ${lastName}`;\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"array-destructuring\"\n  }, \"Array destructuring\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"const arr = [1, 2, 3, 4];\\n\\n// bad\\nconst first = arr[0];\\nconst second = arr[1];\\nconst forth = arr[3]\\n\\n// good\\nconst [first, second, ,forth] = arr;\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Use object and array destructuring","tags":["javascript"],"emoji":null,"link":null},"fields":{"dateModified":"Jul 28, 2021 15:32 PM","modifiedTimestamp":"2021-07-28T15:32:53.000Z","slug":"/javascript/use-object-and-array-destructuring/"},"tableOfContents":{"items":[{"url":"#object-destructuring","title":"Object destructuring"},{"url":"#array-destructuring","title":"Array destructuring"}]},"parent":{"__typename":"File","relativePath":"javascript/use-object-and-array-destructuring.md"}}},"pageContext":{"id":"31bb071e-ed72-5901-83e0-1124f4383dd4","previous":{"id":"2548ecab-fd23-57b6-9ad7-1625aab57de6","frontmatter":{"title":"Use object property and method shorthand","tags":["javascript"]},"fields":{"slug":"/javascript/use-object-property-and-method-shorthand/","dateModified":"2021-07-28T15:32:53.000Z"}},"next":{"id":"cd99480b-8edb-54ab-967d-40523f07b284","frontmatter":{"title":"Use let and const instead of var to assign variable","tags":["javascript"]},"fields":{"slug":"/javascript/use-let-and-const-instead-of-var/","dateModified":"2021-07-28T15:32:53.000Z"}},"hasUntagged":false,"basePath":"/"}},"staticQueryHashes":["1437003973","2744905544","3664657028","467212769","467212769"]}