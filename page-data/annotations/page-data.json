{"componentChunkName":"component---node-modules-gatsby-theme-code-notes-src-templates-note-js","path":"/annotations/","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"MDX Annotations\",\n  \"tags\": [\"mdx\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Highlight = makeShortcode(\"Highlight\");\nvar Underline = makeShortcode(\"Underline\");\nvar Box = makeShortcode(\"Box\");\nvar Circle = makeShortcode(\"Circle\");\nvar StrikeThrough = makeShortcode(\"StrikeThrough\");\nvar CrossedOff = makeShortcode(\"CrossedOff\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Note annotations are made possible using a React port of \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://roughnotation.com\"\n  }), \"Rough Notation\"), \". Annotations can be added by wrapping your text with one of the components provided in your notes.\"), mdx(\"p\", null, \"Annotation defaults have been defined, but you can ovverride them if you want. See all the options \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/linkstrifer/react-rough-notation#props\"\n  }), \"here\"), \".\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-mdx\"\n  }), \"I want to <Highlight color=\\\"green\\\">highlight</Highlight> some text\\n\")), mdx(\"h2\", {\n    \"id\": \"highlight\"\n  }, \"Highlight\"), mdx(\"p\", null, \"Himenaeos in a ante pretium cubilia ut nisl dictumst ultrices massa, elementum iaculis varius ad cursus vehicula \", mdx(Highlight, {\n    mdxType: \"Highlight\"\n  }, \"torquent eros penatibus\"), \", rhoncus porttitor senectus est consequat vitae tempus mollis mus. Posuere sociis morbi suspendisse aliquam arcu convallis ac montes himenaeos, quisque iaculis eget \", mdx(Highlight, {\n    mdxType: \"Highlight\"\n  }, \"lobortis auctor tempus feugiat fames integer, platea lacinia dignissim egestas nunc orci ad ipsum\"), \".\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-mdx\"\n  }), \"I want to <Highlight>highlight</Highlight> some text\\n\")), mdx(\"h2\", {\n    \"id\": \"underline\"\n  }, \"Underline\"), mdx(\"p\", null, \"Habitant ipsum \", mdx(Underline, {\n    mdxType: \"Underline\"\n  }, \"lorem penatibus condimentum orci\"), \" curabitur ligula tempus aenean dignissim adipiscing interdum mi, quis sapien convallis nisl vel dolor lacus pharetra montes taciti, nibh venenatis consectetur dictumst maecenas cum morbi senectus curae imperdiet massa platea.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-mdx\"\n  }), \"I want to <Underline>underline</Underline> some text\\n\")), mdx(\"h2\", {\n    \"id\": \"box\"\n  }, \"Box\"), mdx(\"p\", null, \"Eros scelerisque erat \", mdx(Box, {\n    mdxType: \"Box\"\n  }, \"mauris euismod tincidunt\"), \" euismod sit cubilia ornare fringilla, congue risus mauris nostra lobortis consequat torquent suscipit, montes in non himenaeos adipiscing aliquam.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-mdx\"\n  }), \"I want to <Box>put a box around</Box> some text\\n\")), mdx(\"h2\", {\n    \"id\": \"circle\"\n  }, \"Circle\"), mdx(\"p\", null, \"Ante et dis platea fusce sapien \", mdx(Circle, {\n    mdxType: \"Circle\"\n  }, \"faucibus nullam\"), \", eget dictum dui mus nunc purus integer facilisis, facilisi pellentesque cubilia iaculis augue arcu.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-mdx\"\n  }), \"I want to <Circle>put a circle around</Circle> some text\\n\")), mdx(\"h2\", {\n    \"id\": \"strikethrough\"\n  }, \"StrikeThrough\"), mdx(\"p\", null, \"Netus dolor aliquam \", mdx(StrikeThrough, {\n    mdxType: \"StrikeThrough\"\n  }, \"mauris sociis imperdiet\"), \" commodo taciti, odio nullam vitae vulputate ullamcorper phasellus cubilia fringilla, adipiscing in pharetra per tincidunt consectetur.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-mdx\"\n  }), \"I want to <StrikeThrough>strike-through</StrikeThrough> some text\\n\")), mdx(\"h2\", {\n    \"id\": \"crossedoff\"\n  }, \"CrossedOff\"), mdx(\"p\", null, \"Habitant ligula pharetra \", mdx(CrossedOff, {\n    mdxType: \"CrossedOff\"\n  }, \"elementum pellentesque\"), \" lacus ante id ipsum imperdiet, fermentum rhoncus integer erat egestas blandit risus odio dictum, dui mattis nullam nisl arcu ridiculus a penatibus.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-mdx\"\n  }), \"I want to <CrossedOff>cross-off</CrossedOff> some text\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"MDX Annotations","tags":["mdx"],"emoji":null,"link":null},"fields":{"dateModified":"Jul 20, 2020 13:34 PM","modifiedTimestamp":"2020-07-20T13:34:00.000Z","slug":"/annotations/"},"tableOfContents":{"items":[{"url":"#highlight","title":"Highlight"},{"url":"#underline","title":"Underline"},{"url":"#box","title":"Box"},{"url":"#circle","title":"Circle"},{"url":"#strikethrough","title":"StrikeThrough"},{"url":"#crossedoff","title":"CrossedOff"}]},"parent":{"__typename":"File","relativePath":"annotations.mdx"}}},"pageContext":{"id":"590f2b05-2518-5c5a-bab7-f0f2b162cde4","previous":{"id":"f8742600-e998-55d0-b63b-78c0159b33fa","frontmatter":{"title":"Markdown features","tags":["markdown","cheatsheet"]},"fields":{"slug":"/markdown-cheatsheet/","dateModified":"2020-07-20T13:34:00.000Z"}},"next":null,"hasUntagged":false,"basePath":"/"}},"staticQueryHashes":["1437003973","2744905544","3664657028","467212769","467212769"]}