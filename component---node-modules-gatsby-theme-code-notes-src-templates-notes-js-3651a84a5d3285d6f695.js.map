{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-code-notes/src/templates/Notes.js","webpack:///./node_modules/gatsby-theme-code-notes/src/components/NoteList/NoteList.tsx","webpack:///./node_modules/gatsby-theme-code-notes/src/components/NotesPage/NotesPage.tsx"],"names":["NotesPage","pageQuery","NoteList","notes","sort","one","two","node","frontmatter","title","localeCompare","map","tags","emoji","fields","dateModified","modifiedTimestamp","slug","NoteListItem","key","data","pageContext","location","allMdx","edges","siteTitle","useSiteMetadata","Layout","activeTag","tag","path","pathname","basePath","hasUntagged","as","variant","TagDot","size"],"mappings":"6FACA,iEAEeA,YAAf,EAEO,IAAMC,EAAS,c,+ICETC,EAA6C,SAAC,GAAc,IAAZC,EAAY,EAAZA,MAC3D,OACE,kBAAC,WAAD,KACGA,EACEC,MAAK,SAACC,EAAKC,GAAN,OACJD,EAAIE,KAAKC,YAAYC,MAAMC,cAAcJ,EAAIC,KAAKC,YAAYC,UAE/DE,KAAI,YAAc,IAAXJ,EAAW,EAAXA,KAAW,EACcA,EAAKC,YAA5BC,EADS,EACTA,MAAOG,EADE,EACFA,KAAMC,EADJ,EACIA,MADJ,EAEiCN,EAAKO,OAA/CC,EAFS,EAETA,aAAcC,EAFL,EAEKA,kBAAmBC,EAFxB,EAEwBA,KACzC,OACE,kBAACC,EAAA,EAAD,CACET,MAAOA,EACPI,MAAOA,EACPD,KAAMA,EACNK,KAAMA,EACNF,aAAcA,EACdC,kBAAmBA,EACnBG,IAAKF,S,oCCjBNjB,EAAY,SAAC,GAAoC,IAAlCoB,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACvCnB,EAAQiB,EAAKG,OAAOC,MAEpBC,EADYC,cAAVjB,MAGR,OACE,YAACkB,EAAA,EAAD,CACEC,UAAWP,EAAYQ,IACvBC,KAAMR,EAASS,SACfC,SAAUX,EAAYW,SACtBC,YAAaZ,EAAYY,YACzBxB,MAAOY,EAAYQ,IAAZ,QAA0BR,EAAYQ,IAAQJ,GAEpDJ,EAAYQ,KACX,YAAC,IAAD,CAASK,GAAG,KAAKC,QAAQ,aACF,aAApBd,EAAYQ,IACX,YAAC,WAAD,KACE,YAACO,EAAA,EAAD,CAAQP,IAAKR,EAAYQ,IAAKQ,KAAK,UADrC,IACiDhB,EAAYQ,KAG7D,YAAC,WAAD,wBAIN,YAAC,EAAD,CAAU1B,MAAOA","file":"component---node-modules-gatsby-theme-code-notes-src-templates-notes-js-3651a84a5d3285d6f695.js","sourcesContent":["import { graphql } from 'gatsby'\nimport { NotesPage } from '../components/NotesPage'\n\nexport default NotesPage\n\nexport const pageQuery = graphql`\n  fragment AllPages on Mdx {\n    id\n    frontmatter {\n      title\n      tags\n      emoji\n    }\n    fields {\n      dateModified(formatString: \"MMM DD, YYYY\")\n      modifiedTimestamp: dateModified\n      slug\n    }\n  }\n\n  query {\n    allMdx(sort: { fields: fields___dateModified, order: DESC }) {\n      edges {\n        node {\n          ...AllPages\n        }\n      }\n    }\n  }\n`\n","import React, { Fragment, FunctionComponent } from 'react'\nimport { NoteListItem } from '../NoteListItem'\n\ninterface NoteListProps {\n  notes: any[]\n}\n\nexport const NoteList: FunctionComponent<NoteListProps> = ({ notes }) => {\n  return (\n    <Fragment>\n      {notes\n        .sort((one, two) =>\n          one.node.frontmatter.title.localeCompare(two.node.frontmatter.title)\n        )\n        .map(({ node }) => {\n          const { title, tags, emoji } = node.frontmatter\n          const { dateModified, modifiedTimestamp, slug } = node.fields\n          return (\n            <NoteListItem\n              title={title}\n              emoji={emoji}\n              tags={tags}\n              slug={slug}\n              dateModified={dateModified}\n              modifiedTimestamp={modifiedTimestamp}\n              key={slug}\n            />\n          )\n        })}\n    </Fragment>\n  )\n}\n","/** @jsx jsx */\nimport { jsx, Heading } from 'theme-ui'\nimport { Fragment } from 'react'\nimport { NoteList } from '../NoteList'\nimport { Layout } from '../Layout'\nimport { useSiteMetadata } from '../../use-site-metadata'\nimport { TagDot } from '../TagDot'\n\nexport const NotesPage = ({ data, pageContext, location }) => {\n  const notes = data.allMdx.edges\n  const { title } = useSiteMetadata()\n  const siteTitle = title\n\n  return (\n    <Layout\n      activeTag={pageContext.tag}\n      path={location.pathname}\n      basePath={pageContext.basePath}\n      hasUntagged={pageContext.hasUntagged}\n      title={pageContext.tag ? `Tag: ${pageContext.tag}` : siteTitle}\n    >\n      {pageContext.tag && (\n        <Heading as=\"h1\" variant=\"noteTitle\">\n          {pageContext.tag !== 'untagged' ? (\n            <Fragment>\n              <TagDot tag={pageContext.tag} size=\"0.5em\" /> {pageContext.tag}\n            </Fragment>\n          ) : (\n            <Fragment>Untagged Notes</Fragment>\n          )}\n        </Heading>\n      )}\n      <NoteList notes={notes} />\n    </Layout>\n  )\n}\n"],"sourceRoot":""}